<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Types;

use UnexpectedValueException;

/**
 * Protobuf type <code>types.CommitStatus</code>
 */
class CommitStatus
{
    /**
     * Generated from protobuf enum <code>TX_OK = 0;</code>
     */
    const TX_OK = 0;
    /**
     * Generated from protobuf enum <code>TX_NONCE_TOO_LOW = 1;</code>
     */
    const TX_NONCE_TOO_LOW = 1;
    /**
     * Generated from protobuf enum <code>TX_ALREADY_EXISTS = 2;</code>
     */
    const TX_ALREADY_EXISTS = 2;
    /**
     * Generated from protobuf enum <code>TX_INVALID_HASH = 3;</code>
     */
    const TX_INVALID_HASH = 3;
    /**
     * Generated from protobuf enum <code>TX_INVALID_SIGN = 4;</code>
     */
    const TX_INVALID_SIGN = 4;
    /**
     * Generated from protobuf enum <code>TX_INVALID_FORMAT = 5;</code>
     */
    const TX_INVALID_FORMAT = 5;
    /**
     * Generated from protobuf enum <code>TX_INSUFFICIENT_BALANCE = 6;</code>
     */
    const TX_INSUFFICIENT_BALANCE = 6;
    /**
     * Generated from protobuf enum <code>TX_HAS_SAME_NONCE = 7;</code>
     */
    const TX_HAS_SAME_NONCE = 7;
    /**
     * Generated from protobuf enum <code>TX_INTERNAL_ERROR = 9;</code>
     */
    const TX_INTERNAL_ERROR = 9;

    private static $valueToName = [
        self::TX_OK => 'TX_OK',
        self::TX_NONCE_TOO_LOW => 'TX_NONCE_TOO_LOW',
        self::TX_ALREADY_EXISTS => 'TX_ALREADY_EXISTS',
        self::TX_INVALID_HASH => 'TX_INVALID_HASH',
        self::TX_INVALID_SIGN => 'TX_INVALID_SIGN',
        self::TX_INVALID_FORMAT => 'TX_INVALID_FORMAT',
        self::TX_INSUFFICIENT_BALANCE => 'TX_INSUFFICIENT_BALANCE',
        self::TX_HAS_SAME_NONCE => 'TX_HAS_SAME_NONCE',
        self::TX_INTERNAL_ERROR => 'TX_INTERNAL_ERROR',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

