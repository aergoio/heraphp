<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>types.BlockHeader</code>
 */
class BlockHeader extends \Google\Protobuf\Internal\Message
{
    /**
     * chain identifier
     *
     * Generated from protobuf field <code>bytes chainID = 1;</code>
     */
    private $chainID = '';
    /**
     * hash of previous block
     *
     * Generated from protobuf field <code>bytes prevBlockHash = 2;</code>
     */
    private $prevBlockHash = '';
    /**
     * block number
     *
     * Generated from protobuf field <code>uint64 blockNo = 3;</code>
     */
    private $blockNo = 0;
    /**
     * block creation time stamp
     *
     * Generated from protobuf field <code>int64 timestamp = 4;</code>
     */
    private $timestamp = 0;
    /**
     * hash of root of block merkle tree
     *
     * Generated from protobuf field <code>bytes blocksRootHash = 5;</code>
     */
    private $blocksRootHash = '';
    /**
     * hash of root of transaction merkle tree
     *
     * Generated from protobuf field <code>bytes txsRootHash = 6;</code>
     */
    private $txsRootHash = '';
    /**
     * hash of root of receipt merkle tree
     *
     * Generated from protobuf field <code>bytes receiptsRootHash = 7;</code>
     */
    private $receiptsRootHash = '';
    /**
     * number of blocks this block is able to confirm
     *
     * Generated from protobuf field <code>uint64 confirms = 8;</code>
     */
    private $confirms = 0;
    /**
     * block producer's public key
     *
     * Generated from protobuf field <code>bytes pubKey = 9;</code>
     */
    private $pubKey = '';
    /**
     * address of account to receive fees
     *
     * Generated from protobuf field <code>bytes coinbaseAccount = 10;</code>
     */
    private $coinbaseAccount = '';
    /**
     * block producer's signature of BlockHeader
     *
     * Generated from protobuf field <code>bytes sign = 11;</code>
     */
    private $sign = '';
    /**
     * consensus meta
     *
     * Generated from protobuf field <code>bytes consensus = 12;</code>
     */
    private $consensus = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $chainID
     *           chain identifier
     *     @type string $prevBlockHash
     *           hash of previous block
     *     @type int|string $blockNo
     *           block number
     *     @type int|string $timestamp
     *           block creation time stamp
     *     @type string $blocksRootHash
     *           hash of root of block merkle tree
     *     @type string $txsRootHash
     *           hash of root of transaction merkle tree
     *     @type string $receiptsRootHash
     *           hash of root of receipt merkle tree
     *     @type int|string $confirms
     *           number of blocks this block is able to confirm
     *     @type string $pubKey
     *           block producer's public key
     *     @type string $coinbaseAccount
     *           address of account to receive fees
     *     @type string $sign
     *           block producer's signature of BlockHeader
     *     @type string $consensus
     *           consensus meta
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     * chain identifier
     *
     * Generated from protobuf field <code>bytes chainID = 1;</code>
     * @return string
     */
    public function getChainID()
    {
        return $this->chainID;
    }

    /**
     * chain identifier
     *
     * Generated from protobuf field <code>bytes chainID = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setChainID($var)
    {
        GPBUtil::checkString($var, False);
        $this->chainID = $var;

        return $this;
    }

    /**
     * hash of previous block
     *
     * Generated from protobuf field <code>bytes prevBlockHash = 2;</code>
     * @return string
     */
    public function getPrevBlockHash()
    {
        return $this->prevBlockHash;
    }

    /**
     * hash of previous block
     *
     * Generated from protobuf field <code>bytes prevBlockHash = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPrevBlockHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->prevBlockHash = $var;

        return $this;
    }

    /**
     * block number
     *
     * Generated from protobuf field <code>uint64 blockNo = 3;</code>
     * @return int|string
     */
    public function getBlockNo()
    {
        return $this->blockNo;
    }

    /**
     * block number
     *
     * Generated from protobuf field <code>uint64 blockNo = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBlockNo($var)
    {
        GPBUtil::checkUint64($var);
        $this->blockNo = $var;

        return $this;
    }

    /**
     * block creation time stamp
     *
     * Generated from protobuf field <code>int64 timestamp = 4;</code>
     * @return int|string
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    /**
     * block creation time stamp
     *
     * Generated from protobuf field <code>int64 timestamp = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkInt64($var);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * hash of root of block merkle tree
     *
     * Generated from protobuf field <code>bytes blocksRootHash = 5;</code>
     * @return string
     */
    public function getBlocksRootHash()
    {
        return $this->blocksRootHash;
    }

    /**
     * hash of root of block merkle tree
     *
     * Generated from protobuf field <code>bytes blocksRootHash = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setBlocksRootHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->blocksRootHash = $var;

        return $this;
    }

    /**
     * hash of root of transaction merkle tree
     *
     * Generated from protobuf field <code>bytes txsRootHash = 6;</code>
     * @return string
     */
    public function getTxsRootHash()
    {
        return $this->txsRootHash;
    }

    /**
     * hash of root of transaction merkle tree
     *
     * Generated from protobuf field <code>bytes txsRootHash = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setTxsRootHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->txsRootHash = $var;

        return $this;
    }

    /**
     * hash of root of receipt merkle tree
     *
     * Generated from protobuf field <code>bytes receiptsRootHash = 7;</code>
     * @return string
     */
    public function getReceiptsRootHash()
    {
        return $this->receiptsRootHash;
    }

    /**
     * hash of root of receipt merkle tree
     *
     * Generated from protobuf field <code>bytes receiptsRootHash = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setReceiptsRootHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->receiptsRootHash = $var;

        return $this;
    }

    /**
     * number of blocks this block is able to confirm
     *
     * Generated from protobuf field <code>uint64 confirms = 8;</code>
     * @return int|string
     */
    public function getConfirms()
    {
        return $this->confirms;
    }

    /**
     * number of blocks this block is able to confirm
     *
     * Generated from protobuf field <code>uint64 confirms = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setConfirms($var)
    {
        GPBUtil::checkUint64($var);
        $this->confirms = $var;

        return $this;
    }

    /**
     * block producer's public key
     *
     * Generated from protobuf field <code>bytes pubKey = 9;</code>
     * @return string
     */
    public function getPubKey()
    {
        return $this->pubKey;
    }

    /**
     * block producer's public key
     *
     * Generated from protobuf field <code>bytes pubKey = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setPubKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->pubKey = $var;

        return $this;
    }

    /**
     * address of account to receive fees
     *
     * Generated from protobuf field <code>bytes coinbaseAccount = 10;</code>
     * @return string
     */
    public function getCoinbaseAccount()
    {
        return $this->coinbaseAccount;
    }

    /**
     * address of account to receive fees
     *
     * Generated from protobuf field <code>bytes coinbaseAccount = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setCoinbaseAccount($var)
    {
        GPBUtil::checkString($var, False);
        $this->coinbaseAccount = $var;

        return $this;
    }

    /**
     * block producer's signature of BlockHeader
     *
     * Generated from protobuf field <code>bytes sign = 11;</code>
     * @return string
     */
    public function getSign()
    {
        return $this->sign;
    }

    /**
     * block producer's signature of BlockHeader
     *
     * Generated from protobuf field <code>bytes sign = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setSign($var)
    {
        GPBUtil::checkString($var, False);
        $this->sign = $var;

        return $this;
    }

    /**
     * consensus meta
     *
     * Generated from protobuf field <code>bytes consensus = 12;</code>
     * @return string
     */
    public function getConsensus()
    {
        return $this->consensus;
    }

    /**
     * consensus meta
     *
     * Generated from protobuf field <code>bytes consensus = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setConsensus($var)
    {
        GPBUtil::checkString($var, False);
        $this->consensus = $var;

        return $this;
    }

}

