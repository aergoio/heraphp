<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>types.TxBody</code>
 */
class TxBody extends \Google\Protobuf\Internal\Message
{
    /**
     * increasing number used only once per sender account
     *
     * Generated from protobuf field <code>uint64 nonce = 1;</code>
     */
    private $nonce = 0;
    /**
     * decoded account address
     *
     * Generated from protobuf field <code>bytes account = 2;</code>
     */
    private $account = '';
    /**
     * decoded account address
     *
     * Generated from protobuf field <code>bytes recipient = 3;</code>
     */
    private $recipient = '';
    /**
     * variable-length big integer
     *
     * Generated from protobuf field <code>bytes amount = 4;</code>
     */
    private $amount = '';
    /**
     * Generated from protobuf field <code>bytes payload = 5;</code>
     */
    private $payload = '';
    /**
     * maximum gas used for this transaction. 0 = no limit
     *
     * Generated from protobuf field <code>uint64 gasLimit = 6;</code>
     */
    private $gasLimit = 0;
    /**
     * variable-length big integer. currently not used
     *
     * Generated from protobuf field <code>bytes gasPrice = 7;</code>
     */
    private $gasPrice = '';
    /**
     * Generated from protobuf field <code>.types.TxType type = 8;</code>
     */
    private $type = 0;
    /**
     * hash value of chain identifier in the block
     *
     * Generated from protobuf field <code>bytes chainIdHash = 9;</code>
     */
    private $chainIdHash = '';
    /**
     * sender's signature for this TxBody
     *
     * Generated from protobuf field <code>bytes sign = 10;</code>
     */
    private $sign = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $nonce
     *           increasing number used only once per sender account
     *     @type string $account
     *           decoded account address
     *     @type string $recipient
     *           decoded account address
     *     @type string $amount
     *           variable-length big integer
     *     @type string $payload
     *     @type int|string $gasLimit
     *           maximum gas used for this transaction. 0 = no limit
     *     @type string $gasPrice
     *           variable-length big integer. currently not used
     *     @type int $type
     *     @type string $chainIdHash
     *           hash value of chain identifier in the block
     *     @type string $sign
     *           sender's signature for this TxBody
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     * increasing number used only once per sender account
     *
     * Generated from protobuf field <code>uint64 nonce = 1;</code>
     * @return int|string
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     * increasing number used only once per sender account
     *
     * Generated from protobuf field <code>uint64 nonce = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkUint64($var);
        $this->nonce = $var;

        return $this;
    }

    /**
     * decoded account address
     *
     * Generated from protobuf field <code>bytes account = 2;</code>
     * @return string
     */
    public function getAccount()
    {
        return $this->account;
    }

    /**
     * decoded account address
     *
     * Generated from protobuf field <code>bytes account = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkString($var, False);
        $this->account = $var;

        return $this;
    }

    /**
     * decoded account address
     *
     * Generated from protobuf field <code>bytes recipient = 3;</code>
     * @return string
     */
    public function getRecipient()
    {
        return $this->recipient;
    }

    /**
     * decoded account address
     *
     * Generated from protobuf field <code>bytes recipient = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRecipient($var)
    {
        GPBUtil::checkString($var, False);
        $this->recipient = $var;

        return $this;
    }

    /**
     * variable-length big integer
     *
     * Generated from protobuf field <code>bytes amount = 4;</code>
     * @return string
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * variable-length big integer
     *
     * Generated from protobuf field <code>bytes amount = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAmount($var)
    {
        GPBUtil::checkString($var, False);
        $this->amount = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes payload = 5;</code>
     * @return string
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     * Generated from protobuf field <code>bytes payload = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkString($var, False);
        $this->payload = $var;

        return $this;
    }

    /**
     * maximum gas used for this transaction. 0 = no limit
     *
     * Generated from protobuf field <code>uint64 gasLimit = 6;</code>
     * @return int|string
     */
    public function getGasLimit()
    {
        return $this->gasLimit;
    }

    /**
     * maximum gas used for this transaction. 0 = no limit
     *
     * Generated from protobuf field <code>uint64 gasLimit = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setGasLimit($var)
    {
        GPBUtil::checkUint64($var);
        $this->gasLimit = $var;

        return $this;
    }

    /**
     * variable-length big integer. currently not used
     *
     * Generated from protobuf field <code>bytes gasPrice = 7;</code>
     * @return string
     */
    public function getGasPrice()
    {
        return $this->gasPrice;
    }

    /**
     * variable-length big integer. currently not used
     *
     * Generated from protobuf field <code>bytes gasPrice = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setGasPrice($var)
    {
        GPBUtil::checkString($var, False);
        $this->gasPrice = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.types.TxType type = 8;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.types.TxType type = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Types\TxType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * hash value of chain identifier in the block
     *
     * Generated from protobuf field <code>bytes chainIdHash = 9;</code>
     * @return string
     */
    public function getChainIdHash()
    {
        return $this->chainIdHash;
    }

    /**
     * hash value of chain identifier in the block
     *
     * Generated from protobuf field <code>bytes chainIdHash = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setChainIdHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->chainIdHash = $var;

        return $this;
    }

    /**
     * sender's signature for this TxBody
     *
     * Generated from protobuf field <code>bytes sign = 10;</code>
     * @return string
     */
    public function getSign()
    {
        return $this->sign;
    }

    /**
     * sender's signature for this TxBody
     *
     * Generated from protobuf field <code>bytes sign = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setSign($var)
    {
        GPBUtil::checkString($var, False);
        $this->sign = $var;

        return $this;
    }

}

