<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Types;

use UnexpectedValueException;

/**
 * Protobuf type <code>types.TxType</code>
 */
class TxType
{
    /**
     * Generated from protobuf enum <code>NORMAL = 0;</code>
     */
    const NORMAL = 0;
    /**
     * Generated from protobuf enum <code>GOVERNANCE = 1;</code>
     */
    const GOVERNANCE = 1;
    /**
     * Generated from protobuf enum <code>REDEPLOY = 2;</code>
     */
    const REDEPLOY = 2;
    /**
     * Generated from protobuf enum <code>FEEDELEGATION = 3;</code>
     */
    const FEEDELEGATION = 3;
    /**
     * Generated from protobuf enum <code>TRANSFER = 4;</code>
     */
    const TRANSFER = 4;
    /**
     * Generated from protobuf enum <code>CALL = 5;</code>
     */
    const CALL = 5;
    /**
     * Generated from protobuf enum <code>DEPLOY = 6;</code>
     */
    const DEPLOY = 6;

    private static $valueToName = [
        self::NORMAL => 'NORMAL',
        self::GOVERNANCE => 'GOVERNANCE',
        self::REDEPLOY => 'REDEPLOY',
        self::FEEDELEGATION => 'FEEDELEGATION',
        self::TRANSFER => 'TRANSFER',
        self::CALL => 'CALL',
        self::DEPLOY => 'DEPLOY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

